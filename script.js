// Custom cursor
const cursor = document.querySelector('.squirrel-cursor');
document.addEventListener('mousemove', (e) => {
    cursor.style.left = e.clientX + 'px';
    cursor.style.top = e.clientY + 'px';
});

// GSAP Animations
gsap.from('.hero-content', {
    duration: 1,
    y: 100,
    opacity: 0,
    ease: 'power3.out'
});

gsap.from('.feature', {
    duration: 0.8,
    opacity: 0,
    y: 50,
    stagger: 0.2,
    scrollTrigger: {
        trigger: '.features',
        start: 'top center'
    }
});

// Scroll animations
const observerOptions = {
    threshold: 0.1
};

const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add('visible');
        }
    });
}, observerOptions);

document.querySelectorAll('.fade-in').forEach((element) => {
    observer.observe(element);
});

// Fun nut collection animation
let nutCount = 0;
const nutCounter = document.createElement('div');
nutCounter.style.position = 'fixed';
nutCounter.style.top = '20px';
nutCounter.style.right = '20px';
nutCounter.style.background = '#FF6B6B';
nutCounter.style.padding = '10px';
nutCounter.style.borderRadius = '50%';
nutCounter.style.color = 'white';
nutCounter.style.zIndex = '1000';
nutCounter.innerHTML = 'üå∞ 0';
document.body.appendChild(nutCounter);

document.addEventListener('click', (e) => {
    const nut = document.createElement('div');
    nut.innerHTML = 'üå∞';
    nut.style.position = 'fixed';
    nut.style.left = e.clientX + 'px';
    nut.style.top = e.clientY + 'px';
    nut.style.fontSize = '2rem';
    document.body.appendChild(nut);

    gsap.to(nut, {
        duration: 1,
        y: -100,
        opacity: 0,
        onComplete: () => {
            nut.remove();
            nutCount++;
            nutCounter.innerHTML = `üå∞ ${nutCount}`;
        }
    });
});

// Join button animation
const joinButton = document.querySelector('.join-button');
joinButton.addEventListener('mouseover', () => {
    gsap.to(joinButton, {
        duration: 0.3,
        scale: 1.1,
        ease: 'power2.out'
    });
});

joinButton.addEventListener('mouseout', () => {
    gsap.to(joinButton, {
        duration: 0.3,
        scale: 1,
        ease: 'power2.out'
    });
});

// Expanded squirrel facts
const squirrelFacts = [
    "–ë–µ–ª–∫–∏ –º–æ–≥—É—Ç –Ω–∞–π—Ç–∏ –æ—Ä–µ—Ö–∏ –¥–∞–∂–µ –ø–æ–¥ —Å–Ω–µ–≥–æ–º!",
    "–ë–µ–ª–∫–∏ –ø–æ–º–Ω—è—Ç, –≥–¥–µ —Å–ø—Ä—è—Ç–∞–ª–∏ –¥–æ 90% —Å–≤–æ–∏—Ö –æ—Ä–µ—Ö–æ–≤",
    "–ë–µ–ª–∫–æ–∏–Ω - —Å–∞–º–∞—è –ø—É—à–∏—Å—Ç–∞—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞!",
    "–ë–µ–ª–∫–∏ –º–æ–≥—É—Ç –ø–∞–¥–∞—Ç—å —Å –≤—ã—Å–æ—Ç—ã 30 –º–µ—Ç—Ä–æ–≤ –±–µ–∑ –≤—Ä–µ–¥–∞",
    "–ë–µ–ª–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Å–≤–æ–π —Ö–≤–æ—Å—Ç –∫–∞–∫ –ø–∞—Ä–∞—à—é—Ç –ø—Ä–∏ –ø—Ä—ã–∂–∫–∞—Ö",
    "–ë–µ–ª–∫–∏ –º–æ–≥—É—Ç –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞—Ç—å —Å–≤–æ–∏ –∑–∞–¥–Ω–∏–µ –ª–∞–ø—ã –Ω–∞ 180 –≥—Ä–∞–¥—É—Å–æ–≤",
    "–ë–µ–ª–∫–æ–∏–Ω –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω –ª–æ–≤–∫–æ—Å—Ç—å—é –∏ –Ω–∞—Ö–æ–¥—á–∏–≤–æ—Å—Ç—å—é –±–µ–ª–æ–∫",
    "–ë–µ–ª–∫–∏ –º–æ–≥—É—Ç –±–µ–∂–∞—Ç—å —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é –¥–æ 20 –∫–º/—á",
    "–£ –±–µ–ª–æ–∫ –µ—Å—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è - –æ–Ω–∏ –¥–µ–ª–∞—é—Ç –ª–æ–∂–Ω—ã–µ —Ç–∞–π–Ω–∏–∫–∏!",
    "–ë–µ–ª–∫–∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–±—ã–≤–∞—é—Ç –ø–∞—Ä–æ–ª—å –æ—Ç —Å–≤–æ–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ –ë–µ–ª–∫–æ–∏–Ω",
    "–ë–µ–ª–∫–∏ –º–æ–≥—É—Ç –ø—Ä—ã–≥–∞—Ç—å –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ 6 –º–µ—Ç—Ä–æ–≤",
    "–ë–µ–ª–∫–æ–∏–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º proof-of-nuts",
    "–ë–µ–ª–∫–∏ –æ–±—â–∞—é—Ç—Å—è –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º —Å –ø–æ–º–æ—â—å—é —Å–ª–æ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∑–≤—É–∫–æ–≤",
    "–ö–∞–∂–¥–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ë–µ–ª–∫–æ–∏–Ω —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç—Å—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –æ—Ä–µ—à–∫–æ–º",
    "–ë–µ–ª–∫–∏ –º–æ–≥—É—Ç –ø–ª–∞–≤–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É—è —Ö–≤–æ—Å—Ç –∫–∞–∫ —Ä—É–ª—å",
    "–í —Å–µ—Ç–∏ –ë–µ–ª–∫–æ–∏–Ω –º–∞–π–Ω–µ—Ä—ã –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è '–æ—Ä–µ—Ö–æ–∏—Å–∫–∞—Ç–µ–ª—è–º–∏'",
    "–ë–µ–ª–∫–∏ —Ä–∞–∑–ª–∏—á–∞—é—Ç –±–æ–ª–µ–µ 100 –æ—Ç—Ç–µ–Ω–∫–æ–≤ –æ—Ä–µ—Ö–æ–≤",
    "–ë–µ–ª–∫–æ–∏–Ω - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –∞–Ω—Ç–∏–≥—Ä–∞–≤–∏—Ç–∞—Ü–∏–∏",
    "–ë–µ–ª–∫–∏ –ø—Ä–æ–≤–æ–¥—è—Ç 60% –≤—Ä–µ–º–µ–Ω–∏ –≤ –ø–æ–∏—Å–∫–∞—Ö –æ—Ä–µ—Ö–æ–≤, –∫–∞–∫ –º–∞–π–Ω–µ—Ä—ã –ë–µ–ª–∫–æ–∏–Ω–∞",
    "–•–≤–æ—Å—Ç –±–µ–ª–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ –µ—ë —Ç–µ–ª–∞, –∫–∞–∫ –±–ª–æ–∫—á–µ–π–Ω –ë–µ–ª–∫–æ–∏–Ω–∞",
    "–ë–µ–ª–∫–∏ –¥–µ–ª–∞—é—Ç –∑–∞–ø–∞—Å—ã –Ω–∞ –∑–∏–º—É, –∞ –ë–µ–ª–∫–æ–∏–Ω - –Ω–∞ –±—É–¥—É—â–µ–µ",
    "–£ –±–µ–ª–æ–∫ –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑—É–±—ã –¥–ª—è –∫–æ–ª–∫–∏ –æ—Ä–µ—Ö–æ–≤, –∫–∞–∫ —É –ë–µ–ª–∫–æ–∏–Ω–∞ –¥–ª—è –º–∞–π–Ω–∏–Ω–≥–∞",
    "–ë–µ–ª–∫–∏ –º–æ–≥—É—Ç –∫—Ä—É—Ç–∏—Ç—å—Å—è –≤ –≤–æ–∑–¥—É—Ö–µ –Ω–∞ 360 –≥—Ä–∞–¥—É—Å–æ–≤, –∫–∞–∫ –ª–æ–≥–æ—Ç–∏–ø –ë–µ–ª–∫–æ–∏–Ω–∞",
    "–ë–µ–ª–∫–æ–∏–Ω –∑–∞—Ä—è–∂–∞–µ—Ç—Å—è —ç–Ω–µ—Ä–≥–∏–µ–π –æ—Ç –ø—Ä—ã–∂–∫–æ–≤ –±–µ–ª–æ–∫ –ø–æ –¥–µ—Ä–µ–≤—å—è–º",
    "–ë–µ–ª–∫–∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Ç–µ—Ä—è—é—Ç —Å–≤–æ–∏ –æ—Ä–µ—Ö–∏, –∫–∞–∫ –ë–µ–ª–∫–æ–∏–Ω —Å–≤–æ–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"
];

const newsContainer = document.querySelector('.news-container');
setInterval(() => {
    const randomFact = squirrelFacts[Math.floor(Math.random() * squirrelFacts.length)];
    const factElement = document.createElement('div');
    factElement.className = 'news-item fade-in';
    factElement.innerHTML = `
        <div class="news-icon">üêøÔ∏è</div>
        <h3>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç!</h3>
        <p>${randomFact}</p>
    `;
    
    if (newsContainer.children.length > 3) {
        newsContainer.removeChild(newsContainer.firstChild);
    }
    
    newsContainer.appendChild(factElement);
    observer.observe(factElement);
}, 5000);

// Random squirrel sounds with more variations
const squirrelSounds = [
    '*—à—É—Ö-—à—É—Ö*', '*–ø—É–∫-–ø—É–∫*', '*—Ö—Ä—É–º-—Ö—Ä—É–º*', '*—Ñ—ã—Ä-—Ñ—ã—Ä*',
    '*—Ü–æ–∫-—Ü–æ–∫*', '*—à—É—Ä-—à—É—Ä*', '*—Ç—ã–∫-—Ç—ã–∫*', '*–ø–∏—Ñ-–ø–∞—Ñ*',
    '*–≤–∂—É—Ö-–≤–∂—É—Ö*', '*–ø—Ä—ã–≥-—Å–∫–æ–∫*', '*–Ω—è–º-–Ω—è–º*', '*—á–∏–∫-—á–∏–∫*'
];

function playRandomSquirrelSound() {
    const sound = document.createElement('div');
    sound.style.position = 'fixed';
    sound.style.left = Math.random() * window.innerWidth + 'px';
    sound.style.top = Math.random() * window.innerHeight + 'px';
    sound.style.color = '#FF6B6B';
    sound.style.fontSize = '20px';
    sound.style.pointerEvents = 'none';
    sound.style.zIndex = '9999';
    sound.textContent = squirrelSounds[Math.floor(Math.random() * squirrelSounds.length)];
    document.body.appendChild(sound);
    
    gsap.to(sound, {
        duration: 1,
        y: -50,
        opacity: 0,
        onComplete: () => sound.remove()
    });
}

document.addEventListener('click', () => {
    if(Math.random() > 0.7) {
        playRandomSquirrelSound();
    }
});

// Add floating nuts
function createFloatingNut() {
    const nut = document.createElement('div');
    nut.className = 'floating-nut';
    nut.textContent = 'üå∞';
    nut.style.left = Math.random() * window.innerWidth + 'px';
    nut.style.top = Math.random() * window.innerHeight + 'px';
    document.body.appendChild(nut);
    
    setTimeout(() => {
        nut.remove();
    }, 6000);
}

setInterval(createFloatingNut, 2000);

// Add cursor click effect
document.addEventListener('mousedown', () => {
    cursor.classList.add('clicking');
});

document.addEventListener('mouseup', () => {
    cursor.classList.remove('clicking');
});

// Add squirrel trail effect
function createTrail(e) {
    const trail = document.createElement('div');
    trail.className = 'squirrel-trail';
    trail.style.left = e.clientX + 'px';
    trail.style.top = e.clientY + 'px';
    document.body.appendChild(trail);
    
    setTimeout(() => {
        trail.style.opacity = '0';
        setTimeout(() => {
            trail.remove();
        }, 300);
    }, 100);
}

document.addEventListener('mousemove', createTrail);

// Add scroll progress indicator
const scrollProgress = document.createElement('div');
scrollProgress.className = 'scroll-progress';
document.body.appendChild(scrollProgress);

window.addEventListener('scroll', () => {
    const windowHeight = document.documentElement.scrollHeight - window.innerHeight;
    const progress = window.scrollY / windowHeight;
    scrollProgress.style.transform = `scaleX(${progress})`;
});

// Add nut rain effect on join button click
joinButton.addEventListener('click', createNutRain);

function createNutRain() {
    const rainContainer = document.createElement('div');
    rainContainer.className = 'nut-rain';
    document.body.appendChild(rainContainer);
    
    for(let i = 0; i < 20; i++) {
        const nut = document.createElement('div');
        nut.textContent = 'üå∞';
        nut.style.position = 'absolute';
        nut.style.left = Math.random() * 100 + 'vw';
        nut.style.fontSize = (Math.random() * 20 + 20) + 'px';
        nut.style.animation = `rainNuts ${Math.random() * 2 + 1}s linear`;
        rainContainer.appendChild(nut);
    }
    
    setTimeout(() => {
        rainContainer.remove();
    }, 3000);
}

// Add parallax effect to hero section
const heroContent = document.querySelector('.hero-content');
window.addEventListener('mousemove', (e) => {
    const moveX = (e.clientX - window.innerWidth / 2) * 0.01;
    const moveY = (e.clientY - window.innerHeight / 2) * 0.01;
    heroContent.style.transform = `translate(${moveX}px, ${moveY}px)`;
});
